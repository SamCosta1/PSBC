function foxTarget = computeFoxTarget(rabbitPos, foxPos, NW, SW)  Y = 2; # index of y coordinate  X = 1; # index of x coordinate    foxTarget = rabbitPos;    if foxPos(Y) > NW(Y) && rabbitPos(Y) > NW(Y) ... # Both above       || foxPos(X) < NW(X) && rabbitPos(X) < NW(X) ... # Both to the left      || foxPos(Y) < SW(Y) && rabbitPos(Y) < SW(Y) # Both below    return;  end  % The gradient and intercept of the line between the fox and rabbit  gradient = (rabbitPos(Y) - foxPos(Y)) / (rabbitPos(X) - foxPos(X));  yIntercept = gradient*(NW(X) - foxPos(X)) + foxPos(Y);  % Whether or not this line intersects the bottom or LHS of the   intersectsBottom = ((SW(Y) - rabbitPos(Y)) / gradient) + rabbitPos(X) > SW(X);    intersectsLeft = yIntercept < NW(Y) && yIntercept > SW(Y);    if (intersectsBottom || intersectsLeft)    if (foxPos(Y) > SW(Y) ...        && gradient > 0)      foxTarget = NW;    else      foxTarget = SW;  end end