data = readSalesFigures();x = data.Days(4:end-1)';y = data.Salad(4:end-1);maxTemp = data.MaxTemp(4:end-1);% Transform the data into a matrix who's rows are periodsdatesPeriods = reshape(x, 7, [])';salesPeriods = reshape(y, 7, [])';tempPeriods = reshape(maxTemp, 7, [])';periodSlopes = computePeriodSlopes(datesPeriods, salesPeriods);% Remove slopes that are outliersoutlierIndexes = findOutliers(periodSlopes);datesPeriods(outlierIndexes, :) = [];salesPeriods(outlierIndexes, :) = [];tempPeriods(outlierIndexes, :) = [];slopeAvg = mean(periodSlopes);% Each sales data point transformed based on the slope and the average of% its periodfilteredTemps = [];filteredDates = [];transformedSales = [];for periodIndex = 1:size(datesPeriods, 1)    % Get data for current period  salesPeriod = salesPeriods(periodIndex, :);  tempPeriod = tempPeriods(periodIndex, :);  validIndexes = intersect(find(salesPeriod > 0), find(tempPeriod >= 10));   % Nothing to do if none of the data is valid  if length(validIndexes) == 0    continue;  end    % Filter invalid data  datesPeriod = datesPeriods(periodIndex, :)(validIndexes);  salesPeriod = salesPeriod(validIndexes);  tempPeriod = tempPeriod(validIndexes);    intercept = mean(salesPeriod) - mean(datesPeriod) * slopeAvg;  deltaSales = salesPeriod - (slopeAvg .* datesPeriod + intercept) + mean(salesPeriod);  filteredDates = [filteredDates datesPeriod];  filteredTemps = [filteredTemps tempPeriod];  transformedSales = [transformedSales deltaSales];end% Analyse the last year seperatelyfirstDayOfYr3 = 732;indexesYr3 = find(filteredDates >= firstDayOfYr3);indexesYr1And2 = find(filteredDates < firstDayOfYr3);sales1 = transformedSales(indexesYr3);sales2 = transformedSales(indexesYr1And2);coef1 = corrcoef(filteredTemps(indexesYr3), sales1)(1,2);coef2 = corrcoef(filteredTemps(indexesYr1And2), sales2)(1,2);mean([coef1 coef2])