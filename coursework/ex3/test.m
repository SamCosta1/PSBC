data = readSalesFigures();[datesPeriods, salesPeriods, tempPeriods] = preprocessData(data, data.Bread);periodSlopes = [];##plot(data.Days, data.Salad, "*");##hold on;  for periodIndex = 1:size(datesPeriods, 1)    datesPeriod = datesPeriods(periodIndex, :);    salesPeriod = salesPeriods(periodIndex, :);        % Ignore the zero sales data    validIndexes = find(salesPeriod > 0);        [slope, intercept] = slopeAndIntercept(datesPeriod(validIndexes), ...                                           salesPeriod(validIndexes));                                               periodSlopes(periodIndex) = slope;    ##      plot(datesPeriod, datesPeriod .* slope + intercept, "r");##      hold on;  end  ####  ##set(gca,'FontSize',15)##xlim([7*50, 7*51]);##ylim([600, 800]);##xlabel("Days since 31/12/2014");##ylabel("Bread Sales Data");##print -depsc report/slopes.eps  hold off;% Remove periods who's slopes are outliersoutlierIndexes = findOutliers(periodSlopes);####figure(2)####plot([1: length(periodSlopes)], periodSlopes, "gd"); hold on;##plot(outlierIndexes, periodSlopes(outlierIndexes), "rd");####set(gca,'FontSize',15)##xlim([0, 160]);##ylim([-30, 57]);####xlabel("Period index");##ylabel("Period Slope");##legend("Ordinary slopes", "Outliers", 'Location', 'NorthWest');####print -depsc report/slopeoutliers.epsdatesPeriods(outlierIndexes, :) = [];salesPeriods(outlierIndexes, :) = [];tempPeriods(outlierIndexes, :) = [];periodSlopes(outlierIndexes) = [];slopeAvg = mean(periodSlopes);% Each sales data point transformed based on the slope and the average of% its periodfilteredTemps = [];filteredDates = [];transformedSales = [];for periodIndex = 1:size(datesPeriods, 1)    % Get data for current period  salesPeriod = salesPeriods(periodIndex, :);  tempPeriod = tempPeriods(periodIndex, :);  validIndexes = intersect(find(salesPeriod > 0), find(tempPeriod >= 10));   % Nothing to do if none of the data is valid  if length(validIndexes) == 0    continue;  end    % Filter invalid data  datesPeriod = datesPeriods(periodIndex, :)(validIndexes);  salesPeriod = salesPeriod(validIndexes);  tempPeriod = tempPeriod(validIndexes);    deltaSalesPlusMean = salesPeriod - slopeAvg .* (datesPeriod - mean(datesPeriod));  filteredDates = [filteredDates datesPeriod];  filteredTemps = [filteredTemps tempPeriod];  transformedSales = [transformedSales deltaSalesPlusMean];  end% Analyse the last year seperatelyfirstDayOfYr3 = 732;% The 3rd year data excluding outliersindexesYr3 = find(filteredDates >= firstDayOfYr3);yr3Outliers = findOutliers(transformedSales(indexesYr3));indexesYr3 = setdiff(indexesYr3, indexesYr3(yr3Outliers));   % The 2rd year data excluding outliersindexesYr2 = intersect(find(filteredDates > 365), find(filteredDates < firstDayOfYr3));yr2Outliers = findOutliers(transformedSales(indexesYr2));indexesYr2 = setdiff(indexesYr2, yr2Outliers);% The 1st year data excluding outliersindexesYr1 = find(filteredDates <= 365);yr1Outliers = findOutliers(transformedSales(indexesYr1));indexesYr1 = setdiff(indexesYr1, yr1Outliers);                     % Normalise the data before putting it back togethernormalise = @(data) (data - min(data)) / (max(data) - min(data));sales1 = normalise(transformedSales(indexesYr1));sales2 = normalise(transformedSales(indexesYr2));sales3 = normalise(transformedSales(indexesYr3));% Compute coefficientcoef = corrcoef(filteredTemps([indexesYr1, indexesYr2, indexesYr3]), [sales1, sales2, sales3])(1,2)  ##figure(4);####plot(data.Days, data.Bread, "*");##hold on;##plot(filteredDates, transformedSales, "r-*");##set(gca,'FontSize',15)##xlim([570, 640]);##ylim([600, 800] + 50);##xlabel("Days since 31/12/2014");##ylabel("Bread Sales Data");##legend("Raw sales data", "Transformed data");##print -depsc report/transformed.epsoutliers = [yr1Outliers, yr2Outliers, yr3Outliers];nonOutliers = [indexesYr1, indexesYr2, indexesYr3];plot(filteredDates(yr2Outliers), transformedSales(yr2Outliers), "b*", ... filteredDates(indexesYr2), transformedSales(indexesYr2), "r*")figure(6);plot(filteredDates(nonOutliers), transformedSales(nonOutliers), "b*", ... filteredDates(outliers), transformedSales(outliers), "r*") xlabel("Days since 31/12/2014");ylabel("Transformed Bread Sales Data"); print -depsc report/tempbyproducts.eps