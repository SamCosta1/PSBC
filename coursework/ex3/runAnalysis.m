function [slope, correlationCoef] = runAnalysis(data, salesData)    % Limit the data to whole periods  range = [4:length(data.Days)-1];  dates = data.Days(range);  sales = salesData(range);  maxTemp = data.MaxTemp(range);    slopes = [];  averages = [];  averageX = [];  averageTemp = [];  intercepts = [];    % Iterate through each period  for i = [1:7:length(dates)]        period = i:i+6;    datesPeriod = dates(period)';    salesPeriod = sales(period);    tempPeriod = maxTemp(period);        % Remove zeros    zeroEntries = find(salesPeriod <= 0);    datesPeriod(zeroEntries) = [];    salesPeriod(zeroEntries) = [];        [slope, intercept] = slopeAndIntercept(datesPeriod, salesPeriod);    slopes = [slopes slope];    intercepts = [intercepts intercept];    averages = [averages mean(salesPeriod)];    averageX = [averageX mean(datesPeriod)];    averageTemp = [averageTemp mean(tempPeriod)];  end    % Compute the mean gradient  outlierInds = findOutliers(slopes);    ySlopes = slopes;  ySlopes(outlierInds) = [];  slope = mean(ySlopes);  % Remove slopes corresponding to dates we're not interested in  tempIndexes = setdiff(find(averageTemp >= 10), outlierInds);  length(tempIndexes)  % Compute correlation coefficients  correlationCoef = corrcoef(averageTemp(tempIndexes), averages(tempIndexes))(1,2)
end
