\relax 
\citation{eulerconst}
\@writefile{toc}{\contentsline {section}{\numberline {1}Introduction}{1}}
\@writefile{toc}{\contentsline {section}{\numberline {2}The Euler-Mascheroni constant}{1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}Context}{1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2}The brute force approach}{1}}
\newlabel{bruteforce_code}{{1}{1}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {1}A Brute force implementation to find p and q}{1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.3}Optimizing}{2}}
\newlabel{defgammai}{{2}{2}}
\newlabel{em_constraint}{{3}{2}}
\newlabel{appem_code}{{2}{2}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {2}An optimized implementation to find p and q}{2}}
\citation{carmichael}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.4}Performance}{4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.5}A specific example}{4}}
\newlabel{appem_test_code}{{3}{4}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {3}A test of both implementations for N = 2019}{4}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces A performance comparison between the brute force algorithm and the optimized version}}{5}}
\newlabel{fig:emnaive_vs_better}{{1}{5}}
\@writefile{toc}{\contentsline {section}{\numberline {3}Lucky numbers}{5}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1}Context}{5}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2}The \texttt  {luckynum} function}{6}}
\newlabel{luckynum}{{4}{6}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {4}The luckynum function}{6}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.3}The isLucky function}{6}}
\newlabel{islucky}{{5}{6}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {5}The isLucky function}{6}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces A performance comparison between isLucky and isLuckyAlternative. Note that the even values of x where skipped in producing the data in order to make it more legible, since both functions treat even numbers in the same way}}{8}}
\newlabel{isluckytest}{{2}{8}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.4}A specific example}{9}}
\@writefile{toc}{\contentsline {section}{\numberline {4}Perfect Numbers}{9}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.1}Context}{9}}
\newlabel{rangeN}{{4}{9}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.2}The isPerfect function}{9}}
\newlabel{isperfect}{{6}{9}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {6}The isPerfect function}{9}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.3}The PerfNum function}{10}}
\newlabel{rootNbounds}{{5}{10}}
\newlabel{perfnum}{{7}{10}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {7}The PerfNum function}{10}}
\newlabel{perfworst}{{4.3}{11}}
\@writefile{lol}{\contentsline {lstlisting}{../part3/testWorstCase.m}{11}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.4}Another specific example}{11}}
\@writefile{toc}{\contentsline {section}{\numberline {A}Alternative isLucky function}{11}}
\newlabel{islucky_appendix}{{A}{11}}
\newlabel{islucky_alternative}{{8}{11}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {8}The alternative implementation of isLucky}{11}}
\bibcite{eulerconst}{1}
\bibcite{carmichael}{2}
\@writefile{toc}{\contentsline {section}{\numberline {B}The int2Digits function}{12}}
\newlabel{int2digits}{{9}{12}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {9}The int2Digits function}{12}}
