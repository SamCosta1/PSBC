% PERFNUM returns n, such that n^2 is a perfect square % number with all nine distinct digits from 1 to 9,% which is closest to the input N, another nine digits number %(can be assumed to be between 10^8 and 10^9 -1)function n = PerfNum (N)  rootN = round(sqrt(N));    currentOffset = 0;  found = false;    while (!found)        perfects = [];            for current = [rootN + currentOffset, rootN - currentOffset]              if (isPerfect(current))          perfects = [perfects, current];        end    end        % Find the index of the perfect number     % who's square is closest to N    [delta, indexOfClosest] = min(abs(N - perfects .^ 2));        if (indexOfClosest > 0)      n = current;      found = true;    end        currentOffset = currentOffset + 1;  end  
end
