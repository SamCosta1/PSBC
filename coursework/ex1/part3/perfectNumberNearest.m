function result = perfectNumberNearest(N, knownClosest)    currentDiff = abs(N - knownClosest ^ 2);  lowerBound = sqrt(max(1, N - currentDiff))  upperBound = sqrt(N + currentDiff)    current = floor(lowerBound)  currentBest = knownClosest;  while (current <= upperBound)    current = current + 1;            square = current^2;        if (isPerfect(square))            diff = abs(N - square);            if (diff < currentDiff)        currentDiff =  diff;        currentBest = current;                upperBound = sqrt(N + currentDiff);      endif    endif       
  endwhile    result = currentBest;
endfunction