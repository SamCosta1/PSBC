function result = perfectNumberNearest(N)    smallestPerfectRoot = 11826;  largestPerfectRoot = 30384;    currentBest =  -1;  if (abs(smallestPerfectRoot ^ 2 - N) < abs(largestPerfectRoot^2 - N))      currentBest = smallestPerfectRoot;  else      currentBest = largestPerfectRoot;  endif     currentDiff = abs(N - currentBest ^ 2);  lowerBound = sqrt(max(1, N - currentDiff));  upperBound = sqrt(N + currentDiff);  current = floor(lowerBound);    while (current <= upperBound)    current = current + 1;        square = current^2;        if (isPerfect(square))            diff = abs(N - square);            if (diff < currentDiff)        currentDiff =  diff;        currentBest = current;                upperBound = sqrt(N + currentDiff);      endif    endif       
  endwhile  result = currentBest;
endfunction