format compact%% Find the last two digits of 2019^2019 using power algorithm for modular arithmeticn = 2019;bin_dig = dec2bin(n);        % the binary, represented as characters "1" and "0" (not numbers!)pow2k = [mod(n,100)];           % a vector of 2019(2^k) (mod 100), start with k=0for k=1:length(bin_dig)    pow2k = [pow2k, mod(pow2k(k)^2, 100)]; % add the last two digits of 2018^(2^k) into the vectorendpow2klast_two_dig = 1;  for k=1:length(bin_dig)    if (bin_dig(end+1-k)=='1')   % if the binary digit is '1', multiply the factor 2019^(2^k), starting from the lowest power        last_two_dig = mod(last_two_dig * pow2k(k), 100);          % complete this line, to update the last two digits    endendlast_two_dig  % display the last two digits